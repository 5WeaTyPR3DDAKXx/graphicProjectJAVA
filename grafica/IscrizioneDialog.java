package grafica;

import Classi.*;
import MainCalled.GlobalGestor;
import com.sun.tools.javac.util.Pair;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */

/**
 *
 * @author wuyir
 */
public class IscrizioneDialog extends javax.swing.JDialog {

    /**
     * Creates new form IscrizioneDialog
     */
    
     static Gestore gestor = new GlobalGestor().gestorone;

    private int nRighe = 0;
    private String[] columnNames = {"Matricola", "Nome", "Cognome", "IdAppello"};
    private Object[][] data = {};
    DefaultTableModel model = new DefaultTableModel(data, columnNames) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;  // tutte le celle diventano non modificabili
        }
    };

    public IscrizioneDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
   /*     for(IscrizioneAppello.Pair<String,String> a : gestor.ia.visualizzaIscrizioni()){
            System.out.println(a.fst+" "+a.snd);
        }*/
  /* for(Studente i :gestor.gs.visualizzaStudenti()){
       System.out.println(i);
   }
  */
  for (IscrizioneAppello.Pair<String,String> a : gestor.ia.visualizzaIscrizioni()) {
            System.out.println(a.snd); 
            Object[] row = {a.snd,gestor.gs.cercaStudente(a.snd).getNome(),gestor.gs.cercaStudente(a.snd).getCognome(),a.fst};
            model.addRow(row);
            nRighe++;
        }
        jTable1.setModel(model);
        ArrayList<String> boxModel = new ArrayList<>();
        boxModel.add("");
        for (Appello d : gestor.ga.visualizzaAppelli()) {
            boxModel.add(d.getIdAppello());
        }
        IdAppelloBox.setModel(new DefaultComboBoxModel<>(boxModel.toArray(new String[0])));
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        salvabtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        buttonInserisci1 = new javax.swing.JButton();
        buttonInserisci = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        delete = new javax.swing.JButton();
        matricolaInput = new javax.swing.JTextField();
        IdAppelloBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        salvabtn.setText("Salva");
        salvabtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvabtnActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel6.setText("IdAppello");

        buttonInserisci1.setBackground(new java.awt.Color(255, 0, 0));
        buttonInserisci1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        buttonInserisci1.setText("EXIT");
        buttonInserisci1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonInserisci1ActionPerformed(evt);
            }
        });

        buttonInserisci.setText("Inserisci");
        buttonInserisci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonInserisciActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Matricola Studente", "Nome", "Cognome", "IdAppello"
            }
        ));
        jTable1.setMaximumSize(new java.awt.Dimension(500, 80));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("Iscrizione");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel2.setText("Matricola  ");

        delete.setText("Elimina");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        matricolaInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matricolaInputActionPerformed(evt);
            }
        });

        IdAppelloBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(matricolaInput, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(IdAppelloBox, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(buttonInserisci, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(salvabtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonInserisci1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(salvabtn, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(buttonInserisci1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(IdAppelloBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(matricolaInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(buttonInserisci)
                        .addGap(27, 27, 27)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void salvabtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvabtnActionPerformed
        // TODO add your handling code here:
        ArrayList<String>csv=new ArrayList<>();
        for(IscrizioneAppello.Pair<String,String> i : gestor.ia.visualizzaIscrizioni()){
            csv.add(i.toString());
        }
        gestor.gl.writeFile("iscrizioni_appelli.csv",csv);
    }//GEN-LAST:event_salvabtnActionPerformed

    private void buttonInserisci1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonInserisci1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_buttonInserisci1ActionPerformed

    private void buttonInserisciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonInserisciActionPerformed
        boolean error = false;
        String matricola = matricolaInput.getText();
        String IdAppello = (String) IdAppelloBox.getSelectedItem();
        
        if ("".equals(matricola)||gestor.gs.cercaStudente(matricola)==null) {
            error = true;
            matricolaInput.setBorder(new LineBorder(Color.red, 3));
        } else {
            matricolaInput.setBorder(new JTextField().getBorder());
        }


        if ("".equals(IdAppello)) {
            error = true;
            IdAppelloBox.setBorder(new LineBorder(Color.red, 3));
        } else {
            IdAppelloBox.setBorder(new JComboBox().getBorder());
        }

        if (error) {
            System.out.println("Errore nell'inserimento");
        } else {
            if (gestor.ia.iscriviAppello(gestor.ga.cercaAppello(IdAppello), gestor.gs.cercaStudente(matricola)) ) {
                Object[] nuovaRiga = {matricola,gestor.gs.cercaStudente(matricola).getNome(),gestor.gs.cercaStudente(matricola).getCognome(),IdAppello};
                model.addRow(nuovaRiga);
                jTable1.setRowSelectionInterval(nRighe, nRighe);
                nRighe++;

                if (model.getRowCount() > 1) {
                    delete.setBackground(Color.white);
                }
                matricolaInput.setBorder(new JTextField().getBorder());
                IdAppelloBox.setBorder(new JComboBox().getBorder());

            } else {
                System.out.println(gestor.gs.cercaStudente(matricola).getCorsoIscritto().getDisciplineAssegnati());
                System.out.println(gestor.ga.cercaAppello(IdAppello).getDisciplinaAssegnata());
                matricolaInput.setBorder(new LineBorder(Color.red, 3));
                IdAppelloBox.setBorder(new LineBorder(Color.red, 3));
            }

        }
        // new Studente(string matricola, string nome, string cognome, corso corsoiscritto)
    }//GEN-LAST:event_buttonInserisciActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        int[] rowsSelected = jTable1.getSelectedRows();
        if (model.getRowCount() > 1 && model.getRowCount()>rowsSelected.length) {

            for (int i = rowsSelected.length; i > 0; i--) {
                String code = (String) model.getValueAt(i, 0);
                gestor.ia.elimina(code);
                model.removeRow(i);
                nRighe--;
            }
            delete.setBackground(Color.white);
        } else
        delete.setBackground(Color.red);
    }//GEN-LAST:event_deleteActionPerformed

    private void matricolaInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matricolaInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_matricolaInputActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IscrizioneDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IscrizioneDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IscrizioneDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IscrizioneDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                IscrizioneDialog dialog = new IscrizioneDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> IdAppelloBox;
    private javax.swing.JButton buttonInserisci;
    private javax.swing.JButton buttonInserisci1;
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField matricolaInput;
    private javax.swing.JButton salvabtn;
    // End of variables declaration//GEN-END:variables
}
